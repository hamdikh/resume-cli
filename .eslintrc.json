package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
)

// Struct to unmarshal JSON data
type ProjectConfig struct {
	AksClusterSubnetAddressPrefixes map[string]string `json:"aks_cluster_subnet_address_prefixes"`
}

func main() {
	// Define the root directory where your subscriptions are located
	rootDir := "."

	// Walk through the root directory
	err := filepath.Walk(rootDir, func(path string, info os.FileInfo, err error) error {
		if err != nil {
			return err
		}

		// Check if the current path is a project.auto.tfvars.json file
		if info.Name() == "project.auto.tfvars.json" {
			// Read the file content
			content, err := ioutil.ReadFile(path)
			if err != nil {
				return err
			}

			// Unmarshal the JSON content
			var config ProjectConfig
			err = json.Unmarshal(content, &config)
			if err != nil {
				return err
			}

			// Check if blue and green sections are defined
			blue, blueExists := config.AksClusterSubnetAddressPrefixes["blue"]
			green, greenExists := config.AksClusterSubnetAddressPrefixes["green"]

			if blueExists && greenExists {
				fmt.Printf("Project path: %s\n", path)
				fmt.Printf("Blue subnet: %s\n", blue)
				fmt.Printf("Green subnet: %s\n", green)
			}
		}

		return nil
	})

	if err != nil {
		fmt.Printf("Error walking the path %v: %v\n", rootDir, err)
	}
}
